h2.url=jdbc:h2:~/testsystem
h2.user=root
h2.password=root
h2.maxConnection=100

h2.create.user= CREATE TABLE IF NOT EXISTS users (id BIGINT NOT NULL auto_increment PRIMARY KEY, name  VARCHAR(100) NOT NULL, pass VARCHAR(100) NOT NULL , isTutor BOOLEAN);
h2.create.test= CREATE TABLE IF NOT EXISTS tests (id BIGINT NOT NULL auto_increment PRIMARY KEY, name VARCHAR(255) NOT NULL , type VARCHAR(255) NOT NULL, creationDate DATE);
h2.create.question= CREATE TABLE IF NOT EXISTS questions (id BIGINT NOT NULL auto_increment PRIMARY KEY, text VARCHAR(1000) NOT NULL, testId BIGINT NOT NULL, FOREIGN KEY (testId) REFERENCES tests (Id) ON DELETE CASCADE ON UPDATE CASCADE);
h2.create.answer= CREATE TABLE IF NOT EXISTS answers (id BIGINT NOT NULL auto_increment PRIMARY KEY, text VARCHAR(100) NOT NULL , isRight BOOLEAN, questionId BIGINT NOT NULL, FOREIGN KEY (questionId) REFERENCES questions(id) ON DELETE CASCADE ON UPDATE CASCADE);
h2.create.user.tutor= INSERT INTO users (name, pass, isTutor) (select * from (select 'tutor@tutor', '$2a$10$z6P3LKD2ul98uJIGXdOVT.r0NDoKfZ5jH56wZnVUUOA22tb2VvOzG', true) where not exists (select top 1 * from users where isTutor = true));
h2.create.testresult= CREATE TABLE IF NOT EXISTS testresults (id BIGINT NOT NULL auto_increment PRIMARY KEY, userId BIGINT NOT NULL, testId BIGINT NOT NULL, correctAnswers INT, countAnswers INT, date TIMESTAMP, FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (testId) REFERENCES tests(id) ON DELETE CASCADE ON UPDATE CASCADE);